{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\nimport { Entypo } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar HomeScreenContent = function HomeScreenContent() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.message,\n      children: \"Home Screen\"\n    })\n  });\n};\nvar CustomDrawerContent = function CustomDrawerContent(props) {\n  return _jsxs(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: [_jsx(DrawerItemList, _objectSpread({}, props)), _jsx(DrawerItem, {\n      label: \"Close Drawer\",\n      onPress: function onPress() {\n        return props.navigation.closeDrawer();\n      }\n    })]\n  }));\n};\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return _jsx(CustomDrawerContent, _objectSpread({}, props));\n    },\n    children: _jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeScreenContent\n    })\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","Image","TouchableOpacity","createStackNavigator","createDrawerNavigator","DrawerContentScrollView","DrawerItemList","DrawerItem","Entypo","jsx","_jsx","jsxs","_jsxs","Stack","Drawer","HomeScreenContent","style","styles","container","children","message","CustomDrawerContent","props","_objectSpread","label","onPress","navigation","closeDrawer","HomeScreen","_ref","Navigator","drawerContent","Screen","name","component"],"sources":["W:/VS code/vhss-template-main/vhss-template-main/src/HomeScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator, DrawerContentScrollView, DrawerItemList, DrawerItem } from '@react-navigation/drawer';\r\nimport { Entypo } from '@expo/vector-icons';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst HomeScreenContent = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.message}>Home Screen</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CustomDrawerContent = (props) => {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <DrawerItemList {...props} />\r\n      <DrawerItem\r\n        label=\"Close Drawer\"\r\n        onPress={() => props.navigation.closeDrawer()}\r\n      />\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  return (\r\n    <Drawer.Navigator drawerContent={props => <CustomDrawerContent {...props} />}>\r\n      <Drawer.Screen name=\"Home\" component={HomeScreenContent} />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,qBAAqB,EAAEC,uBAAuB,EAAEC,cAAc,EAAEC,UAAU,QAAQ,0BAA0B;AACrH,SAASC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AACpC,IAAMW,MAAM,GAAGV,qBAAqB,CAAC,CAAC;AAEtC,IAAMW,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;EAC9B,OACEL,IAAA,CAACZ,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BT,IAAA,CAACX,IAAI;MAACiB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAW,CAAM;EAAC,CAC3C,CAAC;AAEX,CAAC;AAED,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,KAAK,EAAK;EACrC,OACEV,KAAA,CAACP,uBAAuB,EAAAkB,aAAA,CAAAA,aAAA,KAAKD,KAAK;IAAAH,QAAA,GAChCT,IAAA,CAACJ,cAAc,EAAAiB,aAAA,KAAKD,KAAK,CAAG,CAAC,EAC7BZ,IAAA,CAACH,UAAU;MACTiB,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMH,KAAK,CAACI,UAAU,CAACC,WAAW,CAAC,CAAC;MAAA;IAAC,CAC/C,CAAC;EAAA,EACqB,CAAC;AAE9B,CAAC;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBH,UAAU,GAAAG,IAAA,CAAVH,UAAU;EAC9B,OACEhB,IAAA,CAACI,MAAM,CAACgB,SAAS;IAACC,aAAa,EAAE,SAAAA,cAAAT,KAAK;MAAA,OAAIZ,IAAA,CAACW,mBAAmB,EAAAE,aAAA,KAAKD,KAAK,CAAG,CAAC;IAAA,CAAC;IAAAH,QAAA,EAC3ET,IAAA,CAACI,MAAM,CAACkB,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEnB;IAAkB,CAAE;EAAC,CAC3C,CAAC;AAEvB,CAAC;AAED,eAAea,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}